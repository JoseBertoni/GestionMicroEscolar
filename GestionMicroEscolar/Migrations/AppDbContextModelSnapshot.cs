// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionMicroEscolar.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entidades.Chico", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MicroPatente")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.HasIndex("MicroPatente");

                    b.ToTable("Chicos");
                });

            modelBuilder.Entity("Domain.Entidades.Chofer", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MicroPatente")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.HasIndex("MicroPatente")
                        .IsUnique()
                        .HasFilter("[MicroPatente] IS NOT NULL");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("Domain.Entidades.Micro", b =>
                {
                    b.Property<string>("Patente")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Patente");

                    b.ToTable("Micros");
                });

            modelBuilder.Entity("Domain.Entidades.Chico", b =>
                {
                    b.HasOne("Domain.Entidades.Micro", "Micro")
                        .WithMany("Chicos")
                        .HasForeignKey("MicroPatente")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Micro");
                });

            modelBuilder.Entity("Domain.Entidades.Chofer", b =>
                {
                    b.HasOne("Domain.Entidades.Micro", "Micro")
                        .WithOne("Chofer")
                        .HasForeignKey("Domain.Entidades.Chofer", "MicroPatente")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Micro");
                });

            modelBuilder.Entity("Domain.Entidades.Micro", b =>
                {
                    b.Navigation("Chicos");

                    b.Navigation("Chofer");
                });
#pragma warning restore 612, 618
        }
    }
}
