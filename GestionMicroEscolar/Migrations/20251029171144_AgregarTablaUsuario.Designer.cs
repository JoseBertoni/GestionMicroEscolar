// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionMicroEscolar.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251029171144_AgregarTablaUsuario")]
    partial class AgregarTablaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entidades.Chico", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MicroPatente")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.HasIndex("MicroPatente");

                    b.ToTable("Chicos");
                });

            modelBuilder.Entity("Domain.Entidades.Chofer", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MicroPatente")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.HasIndex("MicroPatente")
                        .IsUnique()
                        .HasFilter("[MicroPatente] IS NOT NULL");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("Domain.Entidades.Micro", b =>
                {
                    b.Property<string>("Patente")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Patente");

                    b.ToTable("Micros");
                });

            modelBuilder.Entity("GestionMicroEscolar.Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entidades.Chico", b =>
                {
                    b.HasOne("Domain.Entidades.Micro", "Micro")
                        .WithMany("Chicos")
                        .HasForeignKey("MicroPatente")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Micro");
                });

            modelBuilder.Entity("Domain.Entidades.Chofer", b =>
                {
                    b.HasOne("Domain.Entidades.Micro", "Micro")
                        .WithOne("Chofer")
                        .HasForeignKey("Domain.Entidades.Chofer", "MicroPatente")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Micro");
                });

            modelBuilder.Entity("Domain.Entidades.Micro", b =>
                {
                    b.Navigation("Chicos");

                    b.Navigation("Chofer");
                });
#pragma warning restore 612, 618
        }
    }
}
